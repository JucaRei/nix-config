# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }: {
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [
    "ahci"
    "ehci_pci"
    "megaraid_sas"
    "usb_storage"
    "usbhid"
    "sd_mod"
    "sr_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "NIXROOT/root";
    fsType = "zfs";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/0879-5D97";
    fsType = "vfat";
  };

  fileSystems."/home" = {
    device = "NIXROOT/home";
    fsType = "zfs";
  };

  fileSystems."/persist" = {
    device = "NIXROOT/persist";
    fsType = "zfs";
  };

  fileSystems."/webb" = {
    device = "NIXROOT/persist/webb";
    fsType = "zfs";
  };

  fileSystems."/var/lib/paperless" = {
    device = "NIXROOT/persist/documents";
    fsType = "zfs";
  };

  fileSystems."/k8s" = {
    device = "NIXROOT/persist/kubernetes-data";
    fsType = "zfs";
  };

  fileSystems."/var/lib/mattermost" = {
    device = "NIXROOT/persist/mattermost-data";
    fsType = "zfs";
  };

  fileSystems."/webb/media/photos" = {
    device = "NIXROOT/persist/photos";
    fsType = "zfs";
  };

  fileSystems."/var/lib/mlflow" = {
    device = "NIXROOT/persist/mlflow";
    fsType = "zfs";
  };

  fileSystems."/var/lib/nextcloud" = {
    device = "NIXROOT/persist/nextcloud";
    fsType = "zfs";
  };

  fileSystems."/var/lib/minio" = {
    device = "NIXROOT/persist/minio";
    fsType = "zfs";
  };

  fileSystems."/export/media" = {
    device = "NIXROOT/media";
    fsType = "zfs";
  };

  fileSystems."/export/webb" = {
    device = "/webb";
    options = [ "bind" ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno3.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno4.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;

  networking.firewall.allowedTCPPorts = [ 2049 20048 ];
  networking.firewall.allowedUDPPorts = [ 2048 20048 ];
  services.nfs.server.enable = true;
  services.nfs.server.exports = ''
    /export 10.8.0.1/24(rw,nohide,insecure,no_subtree_check) 172.16.10.190/24(rw,nohide,insecure,no_subtree_check)
    /export/webb 10.8.0.1/24(rw,nohide,insecure,no_subtree_check) 172.16.10.190/24(rw,nohide,insecure,no_subtree_check)
  '';
}
